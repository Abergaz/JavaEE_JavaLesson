<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!-- обязательный элемент это  xsi:schemaLocation  -->
    <!-- xmlns схемы поверки для нашего XML  -->

    <!-- описываем наш сервлет и указываем с какими ролями он связан  -->
    <servlet>
        <servlet-name>AuthServlet</servlet-name>
        <servlet-class>ee.servlet.AuthServlet</servlet-class>
        <security-role-ref>
            <!-- Читаемый алиас для роли -->
            <role-name>Administrators</role-name>
            <!-- реальная роль -->
            <role-link>admin</role-link>
        </security-role-ref>
    </servlet>
    <servlet-mapping>
        <servlet-name>AuthServlet</servlet-name>
        <url-pattern>/auth</url-pattern>
    </servlet-mapping>

    <!--<login-config> испольуем для настойки аутентификации   -->
    <login-config>
        <!-- указываем метод аутентификации basic или form -->
        <auth-method>FORM</auth-method>
        <!-- настройка форм -->
        <form-login-config>
            <!-- Страница ввода логина и пароля -->
            <form-login-page>/secure/login-page.jsp</form-login-page>
            <!-- странца куда идёт перенаправление при неправильном логине и пароле -->
            <form-error-page>/secure/login-error.jsp</form-error-page>
        </form-login-config>
    </login-config>
    <!-- security-constraint используется для указания какие ресурсы прячем
       т.е. какие из них будут доступны после аутеннитификации-->
    <security-constraint>
        <web-resource-collection>
            <!-- просто имя  -->
            <web-resource-name>SecureJSP</web-resource-name>
            <!-- ресурс или ресурсы -->
            <url-pattern>/secure/*</url-pattern>
        </web-resource-collection>
        <web-resource-collection>
            <web-resource-name>AuthServlet</web-resource-name>
            <url-pattern>/auth</url-pattern>
        </web-resource-collection>
        <!-- auth-constraint указываем каким ролям разрешен доступ  -->
        <auth-constraint>
            <role-name>admin</role-name>
        </auth-constraint>
        <!-- В -->
        <user-data-constraint>
            <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint>
    </security-constraint>

    <!-- просто указать роли   -->
    <security-role>
        <role-name>root</role-name>
    </security-role>
    <security-role>
        <role-name>admin</role-name>
    </security-role>

    <!-- настройка фильтров   -->
    <filter>
        <!-- даём имя   -->
        <filter-name>MyFilter</filter-name>
        <!-- указываем имя класса фильтра  -->
        <filter-class>ee.filter.MyNewFilter</filter-class>
        <!-- можно подавать параметры и читать их потома в фильре   -->
        <init-param>
            <param-name>name</param-name>
            <param-value>Макс</param-value>
        </init-param>
    </filter>
    <!-- делаем привязку фильтра к сервлетам или jsp   -->
    <filter-mapping>
        <!-- имя фильтра   -->
        <filter-name>MyFilter</filter-name>
        <!-- url сервлета или jsp или шаблон   -->
        <url-pattern>/MyNewFilter</url-pattern>
        <!-- по умолчанию фильтр применяется к запросам  -->
        <dispatcher>REQUEST</dispatcher>
        <!-- но можно чтобы он применялся и к форвардам и к ошибкам    -->
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>

    <!-- подключаем слушателя   -->
    <listener>
        <listener-class>ee.listner.ContextListner</listener-class>
    </listener>
    <!-- подключаем сервлет для работы JSF   -->
    <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.xhtml</url-pattern>
    </servlet-mapping>

</web-app>